!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/tannd/Documents/UIT/IT001/thucHanh/problem_8/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20220102.0/
ChenChuoiTaiVitriK	p2.cpp	/^void ChenChuoiTaiVitriK(char s[], char s1[], int k) {$/;"	f	typeref:typename:void
Chuanhoa	p6.cpp	/^void Chuanhoa(char s[]){$/;"	f	typeref:typename:void
Chuanhoa	p7.cpp	/^void Chuanhoa(char s[]){$/;"	f	typeref:typename:void
DemKyTu	p5.cpp	/^void DemKyTu(char s[]) {$/;"	f	typeref:typename:void
MAX	p2.cpp	/^#define MAX /;"	d	file:
MAX	p3.cpp	/^#define MAX /;"	d	file:
MAX	p4.cpp	/^#define MAX /;"	d	file:
MAX	p5.cpp	/^#define MAX /;"	d	file:
MAX	p6.cpp	/^#define MAX /;"	d	file:
MAX	p7.cpp	/^#define MAX /;"	d	file:
MAX	p8.cpp	/^#define MAX /;"	d	file:
MAX	p9.cpp	/^#define MAX /;"	d	file:
StringReverse	p3.cpp	/^void StringReverse(char s[])$/;"	f	typeref:typename:void
StringReverse	p4.cpp	/^void StringReverse(char st[]) {$/;"	f	typeref:typename:void
containNumber	p9.cpp	/^bool containNumber(char s[]) {$/;"	f	typeref:typename:bool
main	p2.cpp	/^int main()$/;"	f	typeref:typename:int
main	p3.cpp	/^int main()$/;"	f	typeref:typename:int
main	p4.cpp	/^int main()$/;"	f	typeref:typename:int
main	p5.cpp	/^int main()$/;"	f	typeref:typename:int
main	p6.cpp	/^int main()$/;"	f	typeref:typename:int
main	p7.cpp	/^int main() {$/;"	f	typeref:typename:int
main	p8.cpp	/^int main() {$/;"	f	typeref:typename:int
main	p9.cpp	/^int main()$/;"	f	typeref:typename:int
main	template.cpp	/^int main() {$/;"	f	typeref:typename:int
myMemmove	p6.cpp	/^void myMemmove(char s[], int vt, int k) {$/;"	f	typeref:typename:void
myMemmove	p7.cpp	/^void myMemmove(char s[], int vt, int k) {$/;"	f	typeref:typename:void
myPush	p2.cpp	/^void myPush(char s[], int vt, char c) {$/;"	f	typeref:typename:void
myPush	p7.cpp	/^void myPush(char s[], int vt, char c) {$/;"	f	typeref:typename:void
myStrcat	p8.cpp	/^bool myStrcat(char s1[], char s2[]) {$/;"	f	typeref:typename:bool
myStrcmp	p3.cpp	/^int myStrcmp(char s1[], char s2[]) {$/;"	f	typeref:typename:int
myStrcmp	p4.cpp	/^int myStrcmp(char s1[], char s2[]) {$/;"	f	typeref:typename:int
myStrcmp	p5.cpp	/^int myStrcmp(char s1[], char s2[]) {$/;"	f	typeref:typename:int
myStrcpy	p4.cpp	/^void myStrcpy(char s[], int vt, char s1[], int k) {$/;"	f	typeref:typename:void
myStrcpy	p7.cpp	/^void myStrcpy(char s[], int vt, char s1[], int k) {$/;"	f	typeref:typename:void
myStrlen	p2.cpp	/^int myStrlen(char s[], int k) {$/;"	f	typeref:typename:int
myStrlen	p3.cpp	/^int myStrlen(char s[], int k) {$/;"	f	typeref:typename:int
myStrlen	p4.cpp	/^int myStrlen(char s[], int k) {$/;"	f	typeref:typename:int
myStrlen	p5.cpp	/^int myStrlen(char s[], int k) {$/;"	f	typeref:typename:int
myStrlen	p6.cpp	/^int myStrlen(char s[], int k) {$/;"	f	typeref:typename:int
myStrlen	p7.cpp	/^int myStrlen(char s[], int k) {$/;"	f	typeref:typename:int
myStrlen	p8.cpp	/^int myStrlen(char s[]) {$/;"	f	typeref:typename:int
myStrlen	p9.cpp	/^int myStrlen(char s[], int k) {$/;"	f	typeref:typename:int
myStrstr	p6.cpp	/^int myStrstr(char s[], char s1[]) {$/;"	f	typeref:typename:int
